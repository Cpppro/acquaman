#############################################################################
# Makefile for building: ../../build/test-beamline.app/Contents/MacOS/test-beamline
# Generated by qmake (2.01a) (Qt 4.6.2) on: Fri Apr 2 02:15:27 2010
# Project:  beamline_test.pro
# Template: app
# Command: /usr/bin/qmake -spec /usr/local/Qt4.6/mkspecs/macx-g++ -macx -o Makefile beamline_test.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_PHONON_LIB -DQT_SQL_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -gdwarf-2 -arch i386 -Wall -W $(DEFINES)
CXXFLAGS      = -pipe -g -gdwarf-2 -arch i386 -Wall -W $(DEFINES)
INCPATH       = -I/usr/local/Qt4.6/mkspecs/macx-g++ -I. -I/Library/Frameworks/QtCore.framework/Versions/4/Headers -I/usr/include/QtCore -I/Library/Frameworks/QtNetwork.framework/Versions/4/Headers -I/usr/include/QtNetwork -I/Library/Frameworks/QtGui.framework/Versions/4/Headers -I/usr/include/QtGui -I/Library/Frameworks/QtSql.framework/Versions/4/Headers -I/usr/include/QtSql -I/Library/Frameworks/phonon.framework/Versions/4/Headers -I/usr/include/phonon -I/usr/include -I/Library/Frameworks/QtTest.framework/Versions/4/Headers -I/usr/include/QtTest -I. -I../.. -I../../source -I../../../epics/14-11/base/include -I../../../epics/14-11/base/include/os/Darwin -I/Library/Frameworks/phonon.framework/Versions/4/Headers -I/usr/include/libxml2 -I/usr/include/phonon_compat -I. -F/Library/Frameworks
LINK          = g++
LFLAGS        = -headerpad_max_install_names -arch i386
LIBS          = $(SUBLIBS) -F/Library/Frameworks -L/Library/Frameworks -L/Users/mboots/dev/epics/14-11/base/lib/darwin-x86 -lca -lCom -lxml2 -framework QtTest -framework IOKit -framework ApplicationServices -framework Security -framework phonon -framework QtDBus -framework QtXml -framework QtSql -framework QtGui -framework QtNetwork -framework QtCore 
AR            = ar cq
RANLIB        = ranlib -s
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = cp -f
COPY_DIR      = cp -f -R
STRIP         = 
INSTALL_FILE  = $(COPY_FILE)
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = $(COPY_FILE)
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p
export MACOSX_DEPLOYMENT_TARGET = 10.4

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = ../../source/beamline/AMDiagnosticPaddle.cpp \
		../../source/beamline/AMLoadLock.cpp \
		../../source/beamline/AMSampleHolder.cpp \
		../../source/beamline/AMAmpDetector.cpp \
		../../source/beamline/AMSpectrometer.cpp \
		../../source/beamline/AMMono.cpp \
		../../source/beamline/AMVariableAperture.cpp \
		../../source/beamline/AMInsertionDevice.cpp \
		../../source/beamline/AMProcessVariable.cpp \
		../../source/beamline/AMBeamline.cpp \
		../../source/beamline/AMControl.cpp \
		../../source/beamline/AMPVNames.cpp \
		../../source/AMSettings.cpp \
		../../source/beamline/SGMBeamline.cpp \
		../../source/beamline/AMControlState.cpp \
		../../source/AMErrorMonitor.cpp \
		../../source/beamline/AMControlSet.cpp \
		tests.cpp moc_AMSpectrometer.cpp \
		moc_AMProcessVariable.cpp \
		moc_AMBeamline.cpp \
		moc_AMControl.cpp \
		moc_AMDatabase.cpp \
		moc_SGMBeamline.cpp \
		moc_AMControlState.cpp \
		moc_AMErrorMonitor.cpp \
		moc_AMControlSet.cpp
OBJECTS       = AMDiagnosticPaddle.o \
		AMLoadLock.o \
		AMSampleHolder.o \
		AMAmpDetector.o \
		AMSpectrometer.o \
		AMMono.o \
		AMVariableAperture.o \
		AMInsertionDevice.o \
		AMProcessVariable.o \
		AMBeamline.o \
		AMControl.o \
		AMPVNames.o \
		AMSettings.o \
		SGMBeamline.o \
		AMControlState.o \
		AMErrorMonitor.o \
		AMControlSet.o \
		tests.o \
		moc_AMSpectrometer.o \
		moc_AMProcessVariable.o \
		moc_AMBeamline.o \
		moc_AMControl.o \
		moc_AMDatabase.o \
		moc_SGMBeamline.o \
		moc_AMControlState.o \
		moc_AMErrorMonitor.o \
		moc_AMControlSet.o
DIST          = /usr/local/Qt4.6/mkspecs/common/unix.conf \
		/usr/local/Qt4.6/mkspecs/common/mac.conf \
		/usr/local/Qt4.6/mkspecs/common/mac-g++.conf \
		/usr/local/Qt4.6/mkspecs/qconfig.pri \
		/usr/local/Qt4.6/mkspecs/features/qt_functions.prf \
		/usr/local/Qt4.6/mkspecs/features/qt_config.prf \
		/usr/local/Qt4.6/mkspecs/features/exclusive_builds.prf \
		/usr/local/Qt4.6/mkspecs/features/default_pre.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/default_pre.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/dwarf2.prf \
		/usr/local/Qt4.6/mkspecs/features/debug.prf \
		/usr/local/Qt4.6/mkspecs/features/default_post.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/default_post.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/x86.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/objective_c.prf \
		/usr/local/Qt4.6/mkspecs/features/qtestlib.prf \
		/usr/local/Qt4.6/mkspecs/features/warn_on.prf \
		/usr/local/Qt4.6/mkspecs/features/qt.prf \
		/usr/local/Qt4.6/mkspecs/features/unix/thread.prf \
		/usr/local/Qt4.6/mkspecs/features/moc.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/rez.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/sdk.prf \
		/usr/local/Qt4.6/mkspecs/features/resources.prf \
		/usr/local/Qt4.6/mkspecs/features/uic.prf \
		/usr/local/Qt4.6/mkspecs/features/yacc.prf \
		/usr/local/Qt4.6/mkspecs/features/lex.prf \
		/usr/local/Qt4.6/mkspecs/features/include_source_dir.prf \
		beamline_test.pro
QMAKE_TARGET  = test-beamline
DESTDIR       = ../../build/
TARGET        = ../../build/test-beamline.app/Contents/MacOS/test-beamline

####### Custom Compiler Variables
QMAKE_COMP_QMAKE_OBJECTIVE_CFLAGS = -pipe \
		-g \
		-gdwarf-2 \
		-arch \
		i386 \
		-Wall \
		-W


first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile ../../build/test-beamline.app/Contents/PkgInfo ../../build/test-beamline.app/Contents/Resources/empty.lproj ../../build/test-beamline.app/Contents/Info.plist $(TARGET)

$(TARGET):  $(OBJECTS)  
	@$(CHK_DIR_EXISTS) ../../build/test-beamline.app/Contents/MacOS/ || $(MKDIR) ../../build/test-beamline.app/Contents/MacOS/ 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: beamline_test.pro  /usr/local/Qt4.6/mkspecs/macx-g++/qmake.conf /usr/local/Qt4.6/mkspecs/common/unix.conf \
		/usr/local/Qt4.6/mkspecs/common/mac.conf \
		/usr/local/Qt4.6/mkspecs/common/mac-g++.conf \
		/usr/local/Qt4.6/mkspecs/qconfig.pri \
		/usr/local/Qt4.6/mkspecs/features/qt_functions.prf \
		/usr/local/Qt4.6/mkspecs/features/qt_config.prf \
		/usr/local/Qt4.6/mkspecs/features/exclusive_builds.prf \
		/usr/local/Qt4.6/mkspecs/features/default_pre.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/default_pre.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/dwarf2.prf \
		/usr/local/Qt4.6/mkspecs/features/debug.prf \
		/usr/local/Qt4.6/mkspecs/features/default_post.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/default_post.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/x86.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/objective_c.prf \
		/usr/local/Qt4.6/mkspecs/features/qtestlib.prf \
		/usr/local/Qt4.6/mkspecs/features/warn_on.prf \
		/usr/local/Qt4.6/mkspecs/features/qt.prf \
		/usr/local/Qt4.6/mkspecs/features/unix/thread.prf \
		/usr/local/Qt4.6/mkspecs/features/moc.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/rez.prf \
		/usr/local/Qt4.6/mkspecs/features/mac/sdk.prf \
		/usr/local/Qt4.6/mkspecs/features/resources.prf \
		/usr/local/Qt4.6/mkspecs/features/uic.prf \
		/usr/local/Qt4.6/mkspecs/features/yacc.prf \
		/usr/local/Qt4.6/mkspecs/features/lex.prf \
		/usr/local/Qt4.6/mkspecs/features/include_source_dir.prf \
		/Library/Frameworks/QtTest.framework/QtTest.prl \
		/Library/Frameworks/QtCore.framework/QtCore.prl \
		/Library/Frameworks/phonon.framework/phonon.prl \
		/Library/Frameworks/QtDBus.framework/QtDBus.prl \
		/Library/Frameworks/QtXml.framework/QtXml.prl \
		/Library/Frameworks/QtGui.framework/QtGui.prl \
		/Library/Frameworks/QtSql.framework/QtSql.prl \
		/Library/Frameworks/QtNetwork.framework/QtNetwork.prl
	$(QMAKE) -spec /usr/local/Qt4.6/mkspecs/macx-g++ -macx -o Makefile beamline_test.pro
/usr/local/Qt4.6/mkspecs/common/unix.conf:
/usr/local/Qt4.6/mkspecs/common/mac.conf:
/usr/local/Qt4.6/mkspecs/common/mac-g++.conf:
/usr/local/Qt4.6/mkspecs/qconfig.pri:
/usr/local/Qt4.6/mkspecs/features/qt_functions.prf:
/usr/local/Qt4.6/mkspecs/features/qt_config.prf:
/usr/local/Qt4.6/mkspecs/features/exclusive_builds.prf:
/usr/local/Qt4.6/mkspecs/features/default_pre.prf:
/usr/local/Qt4.6/mkspecs/features/mac/default_pre.prf:
/usr/local/Qt4.6/mkspecs/features/mac/dwarf2.prf:
/usr/local/Qt4.6/mkspecs/features/debug.prf:
/usr/local/Qt4.6/mkspecs/features/default_post.prf:
/usr/local/Qt4.6/mkspecs/features/mac/default_post.prf:
/usr/local/Qt4.6/mkspecs/features/mac/x86.prf:
/usr/local/Qt4.6/mkspecs/features/mac/objective_c.prf:
/usr/local/Qt4.6/mkspecs/features/qtestlib.prf:
/usr/local/Qt4.6/mkspecs/features/warn_on.prf:
/usr/local/Qt4.6/mkspecs/features/qt.prf:
/usr/local/Qt4.6/mkspecs/features/unix/thread.prf:
/usr/local/Qt4.6/mkspecs/features/moc.prf:
/usr/local/Qt4.6/mkspecs/features/mac/rez.prf:
/usr/local/Qt4.6/mkspecs/features/mac/sdk.prf:
/usr/local/Qt4.6/mkspecs/features/resources.prf:
/usr/local/Qt4.6/mkspecs/features/uic.prf:
/usr/local/Qt4.6/mkspecs/features/yacc.prf:
/usr/local/Qt4.6/mkspecs/features/lex.prf:
/usr/local/Qt4.6/mkspecs/features/include_source_dir.prf:
/Library/Frameworks/QtTest.framework/QtTest.prl:
/Library/Frameworks/QtCore.framework/QtCore.prl:
/Library/Frameworks/phonon.framework/phonon.prl:
/Library/Frameworks/QtDBus.framework/QtDBus.prl:
/Library/Frameworks/QtXml.framework/QtXml.prl:
/Library/Frameworks/QtGui.framework/QtGui.prl:
/Library/Frameworks/QtSql.framework/QtSql.prl:
/Library/Frameworks/QtNetwork.framework/QtNetwork.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/local/Qt4.6/mkspecs/macx-g++ -macx -o Makefile beamline_test.pro

../../build/test-beamline.app/Contents/PkgInfo: 
	@$(CHK_DIR_EXISTS) ../../build/test-beamline.app/Contents || $(MKDIR) ../../build/test-beamline.app/Contents 
	@$(DEL_FILE) ../../build/test-beamline.app/Contents/PkgInfo
	@echo "APPL????" >../../build/test-beamline.app/Contents/PkgInfo
../../build/test-beamline.app/Contents/Resources/empty.lproj: 
	@$(CHK_DIR_EXISTS) ../../build/test-beamline.app/Contents/Resources || $(MKDIR) ../../build/test-beamline.app/Contents/Resources 
	@touch ../../build/test-beamline.app/Contents/Resources/empty.lproj
	
../../build/test-beamline.app/Contents/Info.plist: 
	@$(CHK_DIR_EXISTS) ../../build/test-beamline.app/Contents || $(MKDIR) ../../build/test-beamline.app/Contents 
	@$(DEL_FILE) ../../build/test-beamline.app/Contents/Info.plist
	@sed -e "s,@ICON@,,g" -e "s,@EXECUTABLE@,test-beamline,g" -e "s,@TYPEINFO@,????,g" /usr/local/Qt4.6/mkspecs/macx-g++/Info.plist.app >../../build/test-beamline.app/Contents/Info.plist
dist: 
	@$(CHK_DIR_EXISTS) .tmp/test-beamline1.0.0 || $(MKDIR) .tmp/test-beamline1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/test-beamline1.0.0/ && $(COPY_FILE) --parents ../../source/beamline/AMDiagnosticPaddle.h ../../source/beamline/AMLoadLock.h ../../source/beamline/AMSampleHolder.h ../../source/beamline/AMAmpDetector.h ../../source/beamline/AMSpectrometer.h ../../source/beamline/AMMono.h ../../source/beamline/AMVariableAperture.h ../../source/beamline/AMInsertionDevice.h ../../source/beamline/AMProcessVariable.h ../../source/beamline/AMBeamline.h ../../source/beamline/AMControl.h ../../source/beamline/AMPVNames.h ../../source/dataman/AMDatabase.h ../../source/dataman/AMDbLoader.h ../../source/AMSettings.h ../../source/beamline/SGMBeamline.h ../../source/beamline/AMControlState.h ../../source/AMErrorMonitor.h ../../source/beamline/AMControlSet.h .tmp/test-beamline1.0.0/ && $(COPY_FILE) --parents ../../source/beamline/AMDiagnosticPaddle.cpp ../../source/beamline/AMLoadLock.cpp ../../source/beamline/AMSampleHolder.cpp ../../source/beamline/AMAmpDetector.cpp ../../source/beamline/AMSpectrometer.cpp ../../source/beamline/AMMono.cpp ../../source/beamline/AMVariableAperture.cpp ../../source/beamline/AMInsertionDevice.cpp ../../source/beamline/AMProcessVariable.cpp ../../source/beamline/AMBeamline.cpp ../../source/beamline/AMControl.cpp ../../source/beamline/AMPVNames.cpp ../../source/AMSettings.cpp ../../source/beamline/SGMBeamline.cpp ../../source/beamline/AMControlState.cpp ../../source/AMErrorMonitor.cpp ../../source/beamline/AMControlSet.cpp tests.cpp .tmp/test-beamline1.0.0/ && (cd `dirname .tmp/test-beamline1.0.0` && $(TAR) test-beamline1.0.0.tar test-beamline1.0.0 && $(COMPRESS) test-beamline1.0.0.tar) && $(MOVE) `dirname .tmp/test-beamline1.0.0`/test-beamline1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/test-beamline1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) -r ../../build/test-beamline.app
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_objective_c_make_all:
compiler_objective_c_clean:
compiler_moc_header_make_all: moc_AMSpectrometer.cpp moc_AMProcessVariable.cpp moc_AMBeamline.cpp moc_AMControl.cpp moc_AMDatabase.cpp moc_SGMBeamline.cpp moc_AMControlState.cpp moc_AMErrorMonitor.cpp moc_AMControlSet.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_AMSpectrometer.cpp moc_AMProcessVariable.cpp moc_AMBeamline.cpp moc_AMControl.cpp moc_AMDatabase.cpp moc_SGMBeamline.cpp moc_AMControlState.cpp moc_AMErrorMonitor.cpp moc_AMControlSet.cpp
moc_AMSpectrometer.cpp: ../../source/beamline/AMControl.h \
		../../source/beamline/AMProcessVariable.h \
		../../source/beamline/AMSpectrometer.h
	/Developer/Tools/Qt/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ ../../source/beamline/AMSpectrometer.h -o moc_AMSpectrometer.cpp

moc_AMProcessVariable.cpp: ../../source/beamline/AMProcessVariable.h
	/Developer/Tools/Qt/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ ../../source/beamline/AMProcessVariable.h -o moc_AMProcessVariable.cpp

moc_AMBeamline.cpp: ../../source/AMSettings.h \
		../../source/beamline/AMPVNames.h \
		../../source/beamline/AMControl.h \
		../../source/beamline/AMProcessVariable.h \
		../../source/beamline/AMAmpDetector.h \
		../../source/beamline/AMDiagnosticPaddle.h \
		../../source/beamline/AMInsertionDevice.h \
		../../source/beamline/AMLoadLock.h \
		../../source/beamline/AMMono.h \
		../../source/beamline/AMSampleHolder.h \
		../../source/beamline/AMSpectrometer.h \
		../../source/beamline/AMVariableAperture.h \
		../../source/beamline/AMBeamline.h
	/Developer/Tools/Qt/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ ../../source/beamline/AMBeamline.h -o moc_AMBeamline.cpp

moc_AMControl.cpp: ../../source/beamline/AMProcessVariable.h \
		../../source/beamline/AMControl.h
	/Developer/Tools/Qt/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ ../../source/beamline/AMControl.h -o moc_AMControl.cpp

moc_AMDatabase.cpp: ../../source/AMSettings.h \
		../../source/dataman/AMDatabase.h
	/Developer/Tools/Qt/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ ../../source/dataman/AMDatabase.h -o moc_AMDatabase.cpp

moc_SGMBeamline.cpp: ../../source/beamline/AMPVNames.h \
		../../source/beamline/AMControlSet.h \
		../../source/acquaman/AMRegion.h \
		../../source/beamline/AMControl.h \
		../../source/beamline/AMProcessVariable.h \
		../../source/beamline/SGMBeamline.h
	/Developer/Tools/Qt/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ ../../source/beamline/SGMBeamline.h -o moc_SGMBeamline.cpp

moc_AMControlState.cpp: ../../source/beamline/AMControl.h \
		../../source/beamline/AMProcessVariable.h \
		../../source/beamline/AMControlState.h
	/Developer/Tools/Qt/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ ../../source/beamline/AMControlState.h -o moc_AMControlState.cpp

moc_AMErrorMonitor.cpp: ../../source/AMErrorMonitor.h
	/Developer/Tools/Qt/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ ../../source/AMErrorMonitor.h -o moc_AMErrorMonitor.cpp

moc_AMControlSet.cpp: ../../source/acquaman/AMRegion.h \
		../../source/beamline/AMControl.h \
		../../source/beamline/AMProcessVariable.h \
		../../source/beamline/AMControlSet.h
	/Developer/Tools/Qt/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ ../../source/beamline/AMControlSet.h -o moc_AMControlSet.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all: tests.moc
compiler_moc_source_clean:
	-$(DEL_FILE) tests.moc
tests.moc: tests.cpp
	/Developer/Tools/Qt/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ tests.cpp -o tests.moc

compiler_rez_source_make_all:
compiler_rez_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_moc_source_clean 

####### Compile

AMDiagnosticPaddle.o: ../../source/beamline/AMDiagnosticPaddle.cpp ../../source/beamline/AMDiagnosticPaddle.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o AMDiagnosticPaddle.o ../../source/beamline/AMDiagnosticPaddle.cpp

AMLoadLock.o: ../../source/beamline/AMLoadLock.cpp ../../source/beamline/AMLoadLock.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o AMLoadLock.o ../../source/beamline/AMLoadLock.cpp

AMSampleHolder.o: ../../source/beamline/AMSampleHolder.cpp ../../source/beamline/AMSampleHolder.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o AMSampleHolder.o ../../source/beamline/AMSampleHolder.cpp

AMAmpDetector.o: ../../source/beamline/AMAmpDetector.cpp ../../source/beamline/AMAmpDetector.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o AMAmpDetector.o ../../source/beamline/AMAmpDetector.cpp

AMSpectrometer.o: ../../source/beamline/AMSpectrometer.cpp ../../source/beamline/AMSpectrometer.h \
		../../source/beamline/AMControl.h \
		../../source/beamline/AMProcessVariable.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o AMSpectrometer.o ../../source/beamline/AMSpectrometer.cpp

AMMono.o: ../../source/beamline/AMMono.cpp ../../source/beamline/AMMono.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o AMMono.o ../../source/beamline/AMMono.cpp

AMVariableAperture.o: ../../source/beamline/AMVariableAperture.cpp ../../source/beamline/AMVariableAperture.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o AMVariableAperture.o ../../source/beamline/AMVariableAperture.cpp

AMInsertionDevice.o: ../../source/beamline/AMInsertionDevice.cpp ../../source/beamline/AMInsertionDevice.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o AMInsertionDevice.o ../../source/beamline/AMInsertionDevice.cpp

AMProcessVariable.o: ../../source/beamline/AMProcessVariable.cpp ../../source/beamline/AMProcessVariable.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o AMProcessVariable.o ../../source/beamline/AMProcessVariable.cpp

AMBeamline.o: ../../source/beamline/AMBeamline.cpp ../../source/beamline/AMBeamline.h \
		../../source/AMSettings.h \
		../../source/beamline/AMPVNames.h \
		../../source/beamline/AMControl.h \
		../../source/beamline/AMProcessVariable.h \
		../../source/beamline/AMAmpDetector.h \
		../../source/beamline/AMDiagnosticPaddle.h \
		../../source/beamline/AMInsertionDevice.h \
		../../source/beamline/AMLoadLock.h \
		../../source/beamline/AMMono.h \
		../../source/beamline/AMSampleHolder.h \
		../../source/beamline/AMSpectrometer.h \
		../../source/beamline/AMVariableAperture.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o AMBeamline.o ../../source/beamline/AMBeamline.cpp

AMControl.o: ../../source/beamline/AMControl.cpp ../../source/beamline/AMControl.h \
		../../source/beamline/AMProcessVariable.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o AMControl.o ../../source/beamline/AMControl.cpp

AMPVNames.o: ../../source/beamline/AMPVNames.cpp ../../source/beamline/AMPVNames.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o AMPVNames.o ../../source/beamline/AMPVNames.cpp

AMSettings.o: ../../source/AMSettings.cpp ../../source/AMSettings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o AMSettings.o ../../source/AMSettings.cpp

SGMBeamline.o: ../../source/beamline/SGMBeamline.cpp ../../source/beamline/SGMBeamline.h \
		../../source/beamline/AMPVNames.h \
		../../source/beamline/AMControlSet.h \
		../../source/acquaman/AMRegion.h \
		../../source/beamline/AMControl.h \
		../../source/beamline/AMProcessVariable.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o SGMBeamline.o ../../source/beamline/SGMBeamline.cpp

AMControlState.o: ../../source/beamline/AMControlState.cpp ../../source/beamline/AMControlState.h \
		../../source/beamline/AMControl.h \
		../../source/beamline/AMProcessVariable.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o AMControlState.o ../../source/beamline/AMControlState.cpp

AMErrorMonitor.o: ../../source/AMErrorMonitor.cpp ../../source/AMErrorMonitor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o AMErrorMonitor.o ../../source/AMErrorMonitor.cpp

AMControlSet.o: ../../source/beamline/AMControlSet.cpp ../../source/beamline/AMControlSet.h \
		../../source/acquaman/AMRegion.h \
		../../source/beamline/AMControl.h \
		../../source/beamline/AMProcessVariable.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o AMControlSet.o ../../source/beamline/AMControlSet.cpp

tests.o: tests.cpp tests.moc
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tests.o tests.cpp

moc_AMSpectrometer.o: moc_AMSpectrometer.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_AMSpectrometer.o moc_AMSpectrometer.cpp

moc_AMProcessVariable.o: moc_AMProcessVariable.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_AMProcessVariable.o moc_AMProcessVariable.cpp

moc_AMBeamline.o: moc_AMBeamline.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_AMBeamline.o moc_AMBeamline.cpp

moc_AMControl.o: moc_AMControl.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_AMControl.o moc_AMControl.cpp

moc_AMDatabase.o: moc_AMDatabase.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_AMDatabase.o moc_AMDatabase.cpp

moc_SGMBeamline.o: moc_SGMBeamline.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_SGMBeamline.o moc_SGMBeamline.cpp

moc_AMControlState.o: moc_AMControlState.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_AMControlState.o moc_AMControlState.cpp

moc_AMErrorMonitor.o: moc_AMErrorMonitor.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_AMErrorMonitor.o moc_AMErrorMonitor.cpp

moc_AMControlSet.o: moc_AMControlSet.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_AMControlSet.o moc_AMControlSet.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

